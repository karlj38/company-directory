function advSearch(e, t = null, a = null, o = null) {
  let n, s, d, r, i;
  switch (
    (e.preventDefault(),
    t && a && o
      ? ((i = !0), (n = "equal"), (s = o))
      : ((t = $("#searchType").val()),
        (a = $("#where").val()),
        (n = $("#operator").val()),
        (s = $("#condition").val()),
        (d = $("#orderBy").val()),
        (r = $("#sortBy").val())),
    (url = ""),
    t)
  ) {
    case "department":
      url = "php/getDepartments";
      break;
    case "location":
      url = "php/getLocations";
      break;
    case "personnel":
      url = "php/getPersonnel";
  }
  $.getJSON(
    url,
    { column: a, operator: n, condition: s, order: d, sort: r },
    function (e) {
      if (200 == e.status.code) {
        const a = e.data;
        if (a && a.length) {
          switch (t) {
            case "department":
              displayDepartments(a);
              break;
            case "location":
              displayLocations(a);
              break;
            case "personnel":
              displayPersonnel(a);
          }
          i
            ? $("#currentView").text($("#currentView").text() + ` Within ${o}`)
            : ((t = t[0].toUpperCase() + t.substr(1)),
              $("#currentView").text(`Custom ${t} Results`));
        } else
          $("#toastErrorMessage").text("No results found"), toastError.show();
      } else
        $("#toastErrorMessage").text(e.status.description), toastError.show();
      $("#advSearch").trigger("reset"), $("#expandedAdvSearch").slideUp();
    }
  );
}
function checkDeletion(e, t, a) {
  let o, n;
  switch (e) {
    case "department":
      (o = "d.name"), (n = "personnel");
      break;
    case "location":
      (o = "l.name"), (n = "department");
  }
  $.getJSON("php/checkDeletion", { table: e, id: t }, function (s) {
    "safe to delete" == s.status.description
      ? configDeleteModal(e, t, a)
      : "cannot delete" == s.status.description &&
        ($("#toastErrorMessage").empty(),
        $("#toastErrorMessage").append(
          `<p>Cannot delete ${e} with existing ${n}.</p>`
        ),
        $("#toastErrorMessage").append(
          `<p><button type="button" class="btn btn-outline-primary" onclick="advSearch(event, '${n}', '${o}', '${a}')" data-bs-dismiss="toast">View dependecies</button></p>`
        ),
        toastError.show());
  });
}
function closeMenuBar() {
  $("#menuBar, #overlay").removeClass("active"),
    $("body").removeClass("noScroll");
}
function configAdvSearch() {
  const e = $("#searchType").val();
  $.getJSON("php/getColumns", { table: e }, function (t) {
    if (200 == t.status.code) {
      const a = t.data || null;
      if (a && a.length) {
        $("#where")
          .empty()
          .append('<option value="" disabled selected hidden>Where</option>'),
          $("#orderBy")
            .empty()
            .append(
              '<option value="" disabled selected hidden>Order By</option>'
            );
        let t = "";
        switch (e) {
          case "department":
            t = "d.";
            break;
          case "location":
            t = "l.";
            break;
          case "personnel":
            t = "p.";
        }
        a.forEach((e) => {
          $("#where").append(
            `<option value="${t}${e.COLUMN_NAME}">${e.COLUMN_NAME}</option>`
          ),
            $("#orderBy").append(
              `<option value="${t}${e.COLUMN_NAME}">${e.COLUMN_NAME}</option>`
            );
        });
      }
    } else $("#toastErrorMessage").text(t.status.description), toastError.show();
  }),
    $("#expandedAdvSearch").slideDown();
}
function configDeptModal(e) {
  $("#deptForm").trigger("reset"),
    $.getJSON("php/getLocations", function (t) {
      if (200 == t.status.code) {
        const a = t.data || null;
        a &&
          a.length &&
          ($("#deptLoc").empty(),
          a.forEach((e) => {
            $("#deptLoc").append(`<option value="${e.id}">${e.name}</option>`);
          }),
          getDepartment(e));
      } else $("#toastErrorMessage").text(t.status.description), toastError.show();
    });
}
function configLocModal(e) {
  $("#LocForm").trigger("reset"), getLocation(e);
}
function configPModal(e, t = null) {
  e.preventDefault(),
    (t = t || $("#search").val()),
    $("#idSearch, #personnelForm").trigger("reset"),
    $.getJSON("php/getDepartments", function (e) {
      if (200 == e.status.code) {
        const a = e.data || null;
        a &&
          a.length &&
          ($("#pDept").empty(),
          a.forEach((e) => {
            $("#pDept").append(`<option value="${e.id}">${e.name}</option>`);
          }),
          getPerson(t));
      } else $("#toastErrorMessage").text(e.status.description), toastError.show();
    });
}
function configNewDeptModal() {
  $("#newDeptForm").trigger("reset"),
    $.getJSON("php/getLocations", function (e) {
      if (200 == e.status.code) {
        const t = e.data || null;
        t &&
          t.length &&
          ($("#newDeptLoc")
            .empty()
            .append(
              '<option value="" selected disabled hidden>\n        Select Location\n      </option>'
            ),
          t.forEach((e) => {
            $("#newDeptLoc").append(
              `<option value="${e.id}">${e.name}</option>`
            );
          }),
          $("#newDeptModal").modal("show"));
      } else $("#toastErrorMessage").text(e.status.description), toastError.show();
    });
}
function configNewLocForm() {
  $("#newLocForm").trigger("reset"), $("#newLocModal").modal("show");
}
function configNewPModal() {
  $("#newPForm").trigger("reset"),
    $.getJSON("php/getDepartments", function (e) {
      if (200 == e.status.code) {
        const t = e.data || null;
        t &&
          t.length &&
          ($("#newPLoc")
            .empty()
            .append(
              '<option value="" selected disabled hidden>\n        Select Department\n      </option>'
            ),
          t.forEach((e) => {
            $("#newPDept").append(`<option value="${e.id}">${e.name}</option>`);
          }),
          $("#newPModal").modal("show"));
      } else $("#toastErrorMessage").text(e.status.description), toastError.show();
    });
}
function configDeleteModal(e, t, a) {
  $("#confirmTarget").text(a),
    $("#confirmDeleteButton").attr(
      "onclick",
      `deleteEntry('${e}', ${t}, '${a}')`
    ),
    $("#confirmDeleteModal").modal("show");
}
function deleteEntry(e, t, a) {
  $.ajax({
    url: "php/delete",
    type: "DELETE",
    data: { table: e, id: t },
    success: function (t) {
      if (200 == t.status.code) {
        switch (e) {
          case "department":
            getDepartments();
            break;
          case "location":
            getLocations();
            break;
          case "personnel":
            getPersonnel();
        }
        $("#confirmDeleteModal").modal("hide"),
          $("#toastSuccessMessage").text(`Deleted ${a}`),
          toastSuccess.show();
      } else
        $("#toastErrorMessage").text(t.status.description), toastError.show();
    },
  });
}
function displayDepartments(e) {
  $("#grid").empty(),
    e.forEach(function (e) {
      let t = $('<div class="col-md-6 col-xl-4 mb-4"></div>'),
        a = $(`<div id="d${e.id}" class="card mx-auto h-100"></div>`),
        o = $('<div class="card-header"></div>');
      o.append(`<h2 class="card-title fs-4">${e.name}</h2>`), a.append(o);
      let n = $('<div class="card-body"></div>');
      n.append(
        `<p class="card-text"><i class="fa fa-map-marker-alt d-inline-flex justify-content-center"></i> ${e.location}</p>`
      ),
        n.append(`<p class="card-text">Personnel: ${e.personnel}</p>`),
        a.append(n);
      let s = $('<div class="card-footer text-end"></div>'),
        d = $('<div class="dropdown d-inline me-2"></div>'),
        r = $(
          `<button id="l${e.id}View" class="btn btn-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"><i class="fas fa-eye"></i></button>`
        );
      d.append(r);
      let i = $(
        `<div class="dropdown-menu p-0" aria-labelled-by="l${e.id}View"></div>`
      );
      i.append(
        `<li><button type="button" class="dropdown-item list-group-item list-group-item-action" onclick="advSearch(event, 'personnel', 'l.name', '${e.location}')">${e.location}</button></li>`
      ),
        i.append(
          `<li><button type="button" class="dropdown-item list-group-item list-group-item-action" onclick="advSearch(event, 'personnel', 'd.name', '${e.name}')">Personnel</button></li>`
        ),
        d.append(i),
        s.append(d),
        s.append(
          `<button class="btn btn-secondary btn-sm me-2" onclick="configDeptModal(${e.id})"><i class="fa fa-edit"></i></button>`
        ),
        s.append(
          `<button type="button" class="btn btn-danger btn-sm" onclick="checkDeletion('department', ${e.id}, '${e.name}')">\n      <i class="fas fa-folder-minus"></i>\n    </button>`
        ),
        a.append(s),
        t.append(a),
        $("#grid").append(t);
    }),
    $("#currentView").text("All Departments"),
    toTop(),
    closeMenuBar();
}
function displayLocations(e) {
  $("#grid").empty(),
    e.forEach(function (e) {
      let t = $('<div class="col-md-6 col-xl-4 mb-4"></div>'),
        a = $(`<div id="l${e.id}" class="card mx-auto h-100"></div>`),
        o = $('<div class="card-header"></div>');
      o.append(`<h2 class="card-title fs-4">${e.name}</h2>`), a.append(o);
      let n = $('<div class="card-body"></div>');
      n.append(`<p class="card-text">Departments: ${e.departments}</p>`),
        n.append(`<p class="card-text">Personnel: ${e.personnel}</p>`),
        a.append(n);
      let s = $('<div class="card-footer text-end"></div>'),
        d = $('<div class="dropdown d-inline me-2"></div>'),
        r = $(
          `<button id="l${e.id}View" class="btn btn-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"><i class="fas fa-eye"></i></button>`
        );
      d.append(r);
      let i = $(
        `<div class="dropdown-menu p-0" aria-labelled-by="l${e.id}View"></div>`
      );
      i.append(
        `<li><button type="button" class="dropdown-item list-group-item list-group-item-action" onclick="advSearch(event, 'department', 'l.name', '${e.name}')">Departments</button></li>`
      ),
        i.append(
          `<li><button type="button" class="dropdown-item list-group-item list-group-item-action" onclick="advSearch(event, 'personnel', 'l.name', '${e.name}')">Personnel</button></li>`
        ),
        d.append(i),
        s.append(d),
        s.append(
          `<button class="btn btn-secondary btn-sm me-2" onclick="configLocModal(${e.id})"><i class="fa fa-edit"></i></button>`
        ),
        s.append(
          `<button id="deleteLoc" type="button" class="btn btn-danger btn-sm" onclick="checkDeletion('location', ${e.id}, '${e.name}')">\n      <i class="fas fa-folder-minus"></i>\n    </button>`
        ),
        a.append(s),
        t.append(a),
        $("#grid").append(t);
    }),
    $("#currentView").text("All Locations"),
    toTop(),
    closeMenuBar();
}
function displayPersonnel(e) {
  $("#grid").empty(),
    e.forEach(function (e) {
      let t = $('<div class="col-md-6 col-xl-4 mb-4"></div>'),
        a = $(`<div id="e${e.id}" class="card mx-auto h-100"></div>`),
        o = $('<div class="card-header"></div>');
      o.append(`<h2 class="card-title fs-4">${e.firstName} ${e.lastName}</h2>`),
        e.jobTitle && o.append(`<p class="card-subtitle">${e.jobTitle}</p>`),
        a.append(o);
      let n = $('<div class="card-body"></div>');
      n.append(
        `<p class="card-text"><i class="fa fa-users d-inline-flex justify-content-center"></i> ${e.department}</p>`
      ),
        n.append(
          `<p class="card-text"><i class="fa fa-map-marker-alt d-inline-flex justify-content-center"></i> ${e.location}</p>`
        ),
        n.append(
          `<p class="card-text"><i class="fa fa-envelope d-inline-flex justify-content-center"></i> <a href="mailto:${e.email}" target="_blank">${e.email}</a></p>`
        ),
        a.append(n);
      let s = $('<div class="card-footer text-end"></div>'),
        d = $('<div class="dropdown d-inline me-2"></div>'),
        r = $(
          `<button id="l${e.id}View" class="btn btn-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"><i class="fas fa-eye"></i></button>`
        );
      d.append(r);
      let i = $(
        `<div class="dropdown-menu p-0" aria-labelled-by="l${e.id}View"></div>`
      );
      i.append(
        `<li><button type="button" class="dropdown-item list-group-item list-group-item-action" onclick="advSearch(event, 'personnel', 'd.name', '${e.department}')">${e.department}</button></li>`
      ),
        i.append(
          `<li><button type="button" class="dropdown-item list-group-item list-group-item-action" onclick="advSearch(event, 'personnel', 'l.name', '${e.location}')">${e.location}</button></li>`
        ),
        d.append(i),
        s.append(d),
        s.append(
          `<button class="btn btn-secondary btn-sm me-2" onclick="configPModal(event, ${e.id})"><i class="fa fa-user-edit"></i></button>`
        ),
        s.append(
          `<button type="button" class="btn btn-danger btn-sm" onclick="configDeleteModal('personnel',${e.id}, '${e.firstName} ${e.lastName}')">\n      <i class="fas fa-user-minus"></i>\n    </button>`
        ),
        a.append(s),
        t.append(a),
        $("#grid").append(t);
    }),
    $("#currentView").text("All Personnel"),
    toTop(),
    closeMenuBar();
}
function getDepartment(e) {
  $.getJSON(
    "php/getDepartments",
    { column: "d.id", operator: "equal", condition: e },
    function (t, a) {
      if (200 == t.status.code) {
        if (t.data && t.data.length) {
          const a = t.data[0];
          $("#deptName").val(a.name),
            $("#deptLoc").val(a.locID),
            $("#deptID").text(e),
            $("#deptModal").modal("show");
        }
      } else
        $("#toastErrorMessage").text(t.status.description), toastError.show();
    }
  );
}
function getLocation(e) {
  $.getJSON(
    "php/getLocations",
    { column: "l.id", operator: "equal", condition: e },
    function (t, a) {
      if (200 == t.status.code) {
        if (t.data && t.data.length) {
          const a = t.data[0];
          $("#locName").val(a.name),
            $("#locID").text(e),
            $("#locModal").modal("show");
        }
      } else
        $("#toastErrorMessage").text(t.status.description), toastError.show();
    }
  );
}
function getPerson(e) {
  $.getJSON(
    "php/getPersonnel",
    { column: "p.id", operator: "equal", condition: e },
    function (t, a) {
      if (200 == t.status.code) {
        if (t.data && t.data.length) {
          const a = t.data[0];
          $("#pFName").val(a.firstName),
            $("#pLName").val(a.lastName),
            $("#pJob").val(a.jobTitle),
            $("#pEmail").val(a.email),
            $("#pDept").val(a.deptID),
            $("#pID").text(e),
            $("#pModal").modal("show");
        }
      } else
        $("#toastErrorMessage").text(t.status.description), toastError.show();
    }
  );
}
function getDepartments() {
  $.getJSON("php/getDepartments", function (e) {
    const t = e.data || null;
    200 == e.status.code
      ? t && t.length && displayDepartments(t)
      : ($("#toastErrorMessage").text(e.status.description), toastError.show());
  });
}
function getLocations() {
  $.getJSON("php/getLocations", function (e) {
    const t = e.data || null;
    200 == e.status.code
      ? t && t.length && displayLocations(t)
      : ($("#toastErrorMessage").text(e.status.description), toastError.show());
  });
}
function getPersonnel() {
  $.getJSON("php/getPersonnel", function (e) {
    const t = e.data || null;
    200 == e.status.code
      ? t && t.length && displayPersonnel(t)
      : ($("#toastErrorMessage").text(e.status.description), toastError.show());
  });
}
function newDepartment(e) {
  e.preventDefault();
  const t = $("#newDept").val(),
    a = $("#newDeptLoc").val();
  $.post("php/newDepartment", { name: t, locID: a }, function (e) {
    201 == e.status.code
      ? (getDepartments(),
        $("#newDeptModal").modal("hide"),
        $("#toastSuccessMessage").text(`${t} created`),
        toastSuccess.show(),
        $("#newDeptForm").trigger("reset"))
      : ($("#newDeptModal").modal("hide"),
        $("#toastErrorMessage").text(e.status.description),
        toastError.show());
  });
}
function newLocation(e) {
  e.preventDefault();
  const t = $("#newLoc").val();
  $.post("php/newLocation", { name: t }, function (e) {
    201 == e.status.code
      ? (getLocations(),
        $("#newLocModal").modal("hide"),
        $("#toastSuccessMessage").text(`${t} created`),
        toastSuccess.show(),
        $("#newLocForm").trigger("reset"))
      : ($("#newLocModal").modal("hide"),
        $("#toastErrorMessage").text(e.status.description),
        toastError.show());
  });
}
function newPersonnel(e) {
  e.preventDefault();
  const t = $("#newPFName").val(),
    a = $("#newPLName").val(),
    o = $("#newPJob").val(),
    n = $("#newPEmail").val(),
    s = $("#newPDept").val();
  $.post(
    "php/newPersonnel",
    { fName: t, lName: a, job: o, email: n, deptID: s },
    function (e) {
      201 == e.status.code
        ? (getPersonnel(),
          $("#newPModal").modal("hide"),
          $("#toastSuccessMessage").text(`${t} ${a} created`),
          toastSuccess.show(),
          $("#newPForm").trigger("reset"))
        : ($("#newPModal").modal("hide"),
          $("#toastErrorMessage").text(e.status.description),
          toastError.show());
    }
  );
}
function openMenuBar() {
  $("#menuBar, #overlay").addClass("active"), $("body").addClass("noScroll");
}
function toggleAdvSearch() {
  $("#toggleAdvSearch i").toggleClass("rotate90"),
    $("#advSearch").slideToggle("fast");
}
function toTop() {
  $("html, body").animate({ scrollTop: 0 });
}
function updateDepartment(e) {
  e.preventDefault();
  const t = $("#deptID").text(),
    a = $("#deptName").val(),
    o = $("#deptLoc").val();
  $.ajax({
    url: "php/updateDepartment",
    type: "PUT",
    data: { id: t, name: a, locID: o },
    success: function (e) {
      200 == e.status.code
        ? (getDepartments(),
          $("#deptModal").modal("hide"),
          $("#toastSuccessMessage").text(`${a} updated`),
          toastSuccess.show())
        : ($("#deptModal").modal("hide"),
          $("#toastErrorMessage").text(e.status.description),
          toastError.show());
    },
  });
}
function updateLocation(e) {
  e.preventDefault();
  const t = $("#locName").val(),
    a = $("#locID").text();
  $.ajax({
    url: "php/updateLocation",
    type: "PUT",
    data: { id: a, name: t },
    success: function (e) {
      200 == e.status.code
        ? (getLocations(),
          $("#LocModal").modal("hide"),
          $("#toastSuccessMessage").text(`${t} updated`),
          toastSuccess.show())
        : ($("#LocModal").modal("hide"),
          $("#toastErrorMessage").text(e.status.description),
          toastError.show());
    },
  });
}
function updatePersonnel(e) {
  e.preventDefault();
  const t = $("#pID").text(),
    a = $("#pFName").val(),
    o = $("#pLName").val(),
    n = $("#pJob").val(),
    s = $("#pEmail").val(),
    d = $("#pDept").val();
  $.ajax({
    url: "php/updatePersonnel",
    type: "PUT",
    data: { id: t, fName: a, lName: o, job: n, email: s, deptID: d },
    success: function (e) {
      200 == e.status.code
        ? (getPersonnel(),
          $("#pModal").modal("hide"),
          $("#toastSuccessMessage").text(`${a} ${o} updated`),
          toastSuccess.show())
        : ($("#pModal").modal("hide"),
          $("#toastErrorMessage").text(e.status.description),
          toastError.show());
    },
  });
}
$(function () {
  getPersonnel(),
    $("form").trigger("reset"),
    $(window).scroll(function () {
      $(this).scrollTop() > screen.availHeight / 2
        ? $("#toTop").fadeIn()
        : $("#toTop").fadeOut();
    }),
    $("#preloader").fadeOut().remove();
  const e = document.getElementById("toastError");
  window.toastError = new bootstrap.Toast(e);
  const t = document.getElementById("toastSuccess");
  window.toastSuccess = new bootstrap.Toast(t);
});
